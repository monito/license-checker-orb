version: 2.1

orbs:
  license-checker: monito/license-checker@<< pipeline.parameters.dev-orb-version >>
  orb-tools: circleci/orb-tools@10.0
  node: circleci/node@4.3.0

# Pipeline Parameters
## These parameters are used internally by orb-tools. Skip to the Jobs section.
parameters:
  run-integration-tests:
    description: An internal flag to prevent integration test from running before a development version has been created.
    type: boolean
    default: false
  dev-orb-version:
    description: >
      The development version of the orb to test. This value is automatically adjusted by the "trigger-integration-tests-workflow" job to correspond with the specific version created by the commit and should not be edited.
    type: string
    default: '2.0.1'

integration-tests:
  &integration-tests [
    integration-test-jobs-copyleft-default,
    integration-test-jobs-default,
    integration-test-jobs-override,
    integration-test-commands,
  ]

jobs:
  # Define one or more jobs which will utilize your orb's commands and parameters to validate your changes.
  integration-test-commands:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
          app-dir: data-fixtures
      - license-checker/install
      - license-checker/validate:
          app-dir: data-fixtures
      - license-checker/validate:
          app-dir: data-fixtures
          forbidden: GPL;LGPL;Forbidden license
      - license-checker/validate-copyleft:
          app-dir: data-fixtures

workflows:
  # Prior to producing a development orb (which requires credentials) basic validation, linting, and even unit testing can be performed.
  # This workflow will run on every commit
  test-pack:
    unless: << pipeline.parameters.run-integration-tests >>
    jobs:
      - orb-tools/lint # Lint Yaml files
      - orb-tools/pack # Pack orb source
      # Publish development version(s) of the orb.
      - orb-tools/publish-dev:
          orb-name: monito/license-checker
          context: orb-publishing # A restricted context containing your private publishing credentials. Will only execute if approved by an authorized user.
          requires:
            - orb-tools/lint
            - orb-tools/pack
      # Trigger an integration workflow to test the
      # dev:${CIRCLE_SHA1:0:7} version of your orb
      - orb-tools/trigger-integration-tests-workflow:
          name: trigger-integration-dev
          context: orb-publishing
          requires:
            - orb-tools/publish-dev

  # This `integration-test_deploy` workflow will only run
  # when the run-integration-tests pipeline parameter is set to true.
  # It is meant to be triggered by the "trigger-integration-tests-workflow"
  # job, and run tests on <your orb>@dev:${CIRCLE_SHA1:0:7}.
  integration-test_deploy:
    when: << pipeline.parameters.run-integration-tests >>
    jobs:
      - license-checker/validate-copyleft:
          name: integration-test-jobs-copyleft-default
          app-dir: data-fixtures
      - license-checker/validate:
          name: integration-test-jobs-default
          app-dir: data-fixtures
      - license-checker/validate:
          name: integration-test-jobs-override
          node-version: 14.17.1
          pkg-manager: yarn
          forbidden: GPL;LGPL;Forbidden license
          app-dir: data-fixtures
      - integration-test-commands

      # Publish a semver version of the orb. relies on
      # the commit subject containing the text "[semver:patch|minor|major|skip]"
      # as that will determine whether a patch, minor or major
      # version will be published or if publishing should
      # be skipped.
      # e.g. [semver:patch] will cause a patch version to be published.
      - orb-tools/dev-promote-prod-from-commit-subject:
          orb-name: monito/license-checker
          context: orb-publishing
          add-pr-comment: true
          bot-token-variable: GITHUB_TOKEN
          fail-if-semver-not-indicated: true
          publish-version-tag: true
          ssh-fingerprints: '7b:05:8f:d1:4c:18:95:b8:a5:3a:15:ed:29:9c:73:c2'
          requires: *integration-tests
          filters:
            branches:
              only:
                - main
